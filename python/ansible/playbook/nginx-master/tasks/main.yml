---

#安装相应的依赖包
- name: Install the selinux python module       
  yum: name=libselinux-python state=present     #安装libselinux-python模块，state=present表示安装，state=absent表删除模块
  when: ansible_os_family == "RedHat"

#这个应该是配置yum源
- name: Copy the epel packages                 
  copy: src=epel.repo dest=/etc/yum.repos.d/epel_ansible.repo       #src是源文件，dest是指复制后的目的文件
  when: ansible_os_family == "RedHat"

#安装nginx
- name: Install the nginx packages              
  yum: name={{ item }} state=present
  with_items: redhat_pkg                #redhat_pkg是一个变量，有些版本应该是使用with_items: "{{ redhat_pkg }}"
  when: ansible_os_family == "RedHat"

#安装nginx，只不过这是使用apt安装
- name: Install the nginx packages 
  apt: name={{ item }} state=present update_cache=yes       #update_cache=yes表示执行的是更新而不是安装
  with_items: ubuntu_pkg
  environment: env                      #这个enviroment是设置环境变量，env是vars文件夹下main.yml中的env的值，也就是设置运行级别为1
  when: ansible_os_family == "Debian"

#file模块类似于copy操作。path指目标路径，也可以用dest,name代替。
#state=directory表示创建目录，而不是文件名；“owner=root group=root”表示该文件夹是root所有，组为root，
#文件夹权限为755
#创建文件夹
- name: Create the directories for site specific configurations
  file: path=/etc/nginx/{{ item }} state=directory owner=root group=root mode=0755  
  with_items:
    - "sites-available"
    - "sites-enabled"

#模板源文件为nginx.conf.j2，转换后的目的文件为/etc/nginx/nginx.conf  
#创建配置文件
- name: Copy the nginx configuration file 
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf        
  notify:       #notify用于通知系统后面的动作要暂时停止触发，取而代之的是仅在所有的变化发生完成后一次性地执行指定操作。
   - restart nginx              #这个内容要跟handle的name相同

#默认配置文件
- name: Copy the nginx default configuration file 
  template: src=default.conf.j2 dest=/etc/nginx/conf.d/default.conf

- name: Copy the nginx default site configuration file 
  template: src=default.j2 dest=/etc/nginx/sites-available/default

#创建符号链接，state=link表示最终生成符号链接，src是源文件，path是生成符号链接
- name: Create the link for site enabled specific configurations
  file: path=/etc/nginx/sites-enabled/default state=link src=/etc/nginx/sites-available/default 

#这是模板命令，创建文件的命令就是这个，这条命令和下面这条命令都一样，实际上只是使用了一个字典值，其余字典值在site中使用
#nginx_sites变量实际上就是在数组使用散列表
- name: Create the configurations for sites
  template: src=site.j2 dest=/etc/nginx/sites-available/{{ item['server']['file_name'] }}
  with_items: nginx_sites               
  when: nginx_sites|lower != 'none'        #lower是jinja2中的过滤器，整条语句表示当nginx_sites是小写且不等于none，才使用。 

- name: Create the links to enable site configurations
  file: path=/etc/nginx/sites-enabled/{{ item['server']['file_name'] }} state=link src=/etc/nginx/sites-available/{{ item['server']['file_name'] }}
  with_items: nginx_sites
  when: nginx_sites|lower != 'none'
  notify: 
   - reload nginx

#enable=yes表示启动nginx，它跟state=started作用是差不多的
- name: start the nginx service
  service: name=nginx state=started enabled=yes

